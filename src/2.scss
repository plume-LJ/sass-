@use "sass:math";
$version: "1.2.3";
/* This CSS is generated by My Snazzy Framework version #{$version}. */

#main p {
  color: #00ff00;
  width: 97%;

  .redbox {
    background-color: #ff0000;
    color: #000000;
  }
}
#main {
  width: 97%;

  p,
  div {
    font-size: 2em;
    a {
      font-weight: bold;
    }
  }

  pre {
    font-size: 3em;
  }
}
.funky {
  font: {
    family: fantasy;
    size: 30em;
    weight: bold;
  }
}

.funky {
  font: 20px/24px {
    family: fantasy;
    weight: bold;
  }
}

%test {
  border-radius: 50%;
  border: solid 1px aqua;
}

.test {
  @extend %test;
}

%test {
  border-radius: 50%;
  border: solid 1px aqua;
}

.test {
  @extend %test;
}

/* This comment is
 * several lines long.
 * since it uses the CSS comment syntax,
 * it will appear in the CSS output. */
body {
  color: black;
}

// These comments are only one line long each.
// They won't appear in the CSS output,
// since they use the single-line comment syntax.
a {
  color: green;
}

//  .n {
//   color: #777 * 2;
//  }
$width: 5em;
$height: 4em;
#main {
  width: $width;
}

#main {
  $width: 6em !global;
  $height: 7em;
  width: $width;
  height: $height;
}

#sidebar {
  width: $width;
  height: $height;
}

@mixin firefox-message($selector) {
  body.firefox #{$selector}:before {
    content: "Hi, Firefox users!";
  }
}
@include firefox-message(".header");

p {
  width: 1in + 8pt;
}

/* pt = px * dpi / 72 */

p {
  font: 10px/8px; // Plain CSS, no division
  $width: 1000px;
  width: $width/2; // Uses a variable, does division
  width: round(1.5) / 2; // Uses a function, does division
  height: (500px/2); // Uses parentheses, does division
  margin-left: 5px + 8px/2px; // Uses +, does division
  margin-left: 5px + math.div(8px, 2px); // Uses +, does division
}
p {
  $font-size: 12px;
  $line-height: 30px;
  font: #{$font-size}/#{$line-height};
}

// p {
//   color: #010203 + #040506;
// }
/* p {
  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);
} */
$translucent-red: rgba(255, 0, 0, 0.5);
p {
  color: opacify($translucent-red, 0.3);
  // color: opacify($translucent-red, 0.7);
  background-color: transparentize($translucent-red, 0.25);
}

$translucent-red: rgba(255, 0, 0, 0.5);
$green: #00ff00;
div {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');
}
p {
  cursor: e + -resize;
}

p:before {
  content: "Foo " + Bar;
  font-family: sans- + "serif";
}

p {
  margin: 3px + 4px auto;
}

p:before {
  content: "I ate #{5 + 10} pies!";
}
$value: null;
p:before {
  content: "I ate #{$value} pies!";
}
p {
  width: 1em + (2em * 3);
}

p {
  color: hsl(0, 100%, 50%);
}

p {
  color: hsl($hue: 0, $saturation: 100%, $lightness: 50%);
}

$name: foo;
$attr: border;
p.#{$name} {
  #{$attr}-color: blue;
}

p {
  $font-size: 12px;
  $line-height: 30px;
  font: #{$font-size}/#{$line-height};
}

.foo.bar .baz.bang,
.bip.qux {
  $selector: &;
  content: "#{$selector}";
}

@mixin does-parent-exist {
  @if & {
    &:hover {
      color: red;
    }
  } @else {
    a {
      color: red;
    }
  }
}
@include does-parent-exist;

div {
  @include does-parent-exist;
}

$content: "First content";
$content: "Second content?" !default;
$new_content: "First time reference" !default;

#main {
  content: $content;
  new-content: $new_content;
}

$content: null;
$content: "Non-null content" !default;

#main {
  content: $content;
}
